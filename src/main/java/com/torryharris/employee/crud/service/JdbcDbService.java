package com.torryharris.employee.crud.service;

import com.torryharris.employee.crud.util.ConfigKeys;
import com.torryharris.employee.crud.util.PropertyFileUtils;
import io.vertx.core.Vertx;
import io.vertx.jdbcclient.JDBCConnectOptions;
import io.vertx.jdbcclient.JDBCPool;
import io.vertx.sqlclient.PoolOptions;

public class JdbcDbService {
  private volatile static JdbcDbService jdbcDbService;
  private final JDBCPool jdbcPool;

  private JdbcDbService(Vertx vertx) {
    jdbcPool = JDBCPool.pool(vertx, getJdbcConnectionOptions(), getPoolOptions());
  }

  public static JdbcDbService getInstance(Vertx vertx) {
    if (jdbcDbService == null) {
      synchronized (JdbcDbService.class) {
        if (jdbcDbService == null) {
          jdbcDbService = new JdbcDbService(vertx);
        }
      }
    }
    return jdbcDbService;
  }

  public JDBCPool getJdbcPool() {
    return jdbcPool;
  }

  private JDBCConnectOptions getJdbcConnectionOptions() {
    return new JDBCConnectOptions()
      .setJdbcUrl(PropertyFileUtils.getProperty(ConfigKeys.JDBC_URL))
      .setUser(PropertyFileUtils.getProperty(ConfigKeys.JDBC_USERNAME))
      .setPassword(PropertyFileUtils.getProperty(ConfigKeys.JDBC_PASSWORD))
      .setAutoGeneratedKeys(true);
  }

  private PoolOptions getPoolOptions() {
    return new PoolOptions()
      .setMaxSize(Integer.parseInt(PropertyFileUtils.getProperty(ConfigKeys.POOL_SIZE)));
  }
}
